# TP1  R309

```
@Bastien-Helec
Tkinter en python
```


---
## 1 Exercice simples

1.1 Des boutons et un label :
Réalisez un programme comportant un label affichant la valeur zéro et deux boutons,
intitulés "+" et "-".
Votre programme doit, lorsque le bouton "+" est activé, incrémenter la valeur dans le
label. De même, le bouton "-" set à décrémenter la valeur

```python
from tkinter import *
from tkinter import ttk

nbr=0
Frame1=Tk()
Frame1.title("Exercice 1")

def plus():
    global nbr
    nbr+=1
    labnbr.config(text=f"Nombre {nbr}")
def moins():
    global nbr
    nbr-=1
    labnbr.config(text=f"Nombre {nbr}")

btnmoins=ttk.Button(Frame1, text="-", command=moins)

btnmoins.grid(column=0)

labnbr= ttk.Label(Frame1, text=f"Nombre {nbr}")
labnbr.grid(column=1)

btnplus=ttk.Button(Frame1, text="+", command=plus)
btnplus.grid(column=2)

Frame1.mainloop()

```


1.2 Validation de mot de passe 
On vous demande de réaliser la fenêtre suivante pour la saisie d’une adresse Email dans
une application :
A chaque appui sur une touche par l’utilisateur, votre programme doit vérifier si
. la chaîne saisie contient le caractère @
. la chaine saisie ne contient pas d’espace
. la chaine saisie contient bien au moins un point
Si et seulement si ces conditions sont remplies, le bouton "Valider" s’active.
A l’appui sur le bouton "Valider", l’application se termine en affichant dans la console
l’adresse Email saisie.
Vous pourrez, si vous le souhaitez, ajouter des indications visuelles pour l’utilisateur :
par exemple une écriture qui passe du rouge au vert lorsque la saisie est correcte.


```python
Frame2=Tk()
Frame2.title("Exercice 2")


labeltitle=ttk.Label(Frame2, text="Veuillez entrer votre Email :")
labeltitle.grid()

lstate=ttk.Label(Frame2, text="Etat :")

mail= StringVar()
entrymail=ttk.Entry(Frame2, textvariable=mail)
entrymail.grid()

def backup_on_terminal():
    print(mail.get())


validate=ttk.Button(Frame2, text="Valider", command=backup_on_terminal)
validate.grid()
validate.config(state="disabled")

checking=int
def check ():
    if "@" not in mail.get():
        checking=1
        return checking
    
    elif "." not in mail.get():
        checking=2
        return checking
    
    elif " " in mail.get():
        checking=3
        return checking
    else:
        checking=0
        return checking


def unlock(event):
    checking=check()
    if checking==0:
        validate.config(state="normal")
        lstate.config(text="Email valide")
        lstate.grid(row=3, column=0)

    else:
        lstate.config(text="Email non valide")
        lstate.grid(row=3, column=0)
        validate.config(state="disabled")

entrymail.bind("<KeyRelease>", unlock)
Frame2.mainloop()
```