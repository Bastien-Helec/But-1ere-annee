# TP1 R3D17 - Vagrant

```
@Bastien-Helec
```
---
## 1 Vagrant :

1.1 Creation d'une première VM Ubuntu : 

1. Créer un répertoire Vagrant à la racine de votre compte.

2. Placez-vous dans ce répertoire et créez un répertoire VM1. Version rapide qui créée les 2 répertoires simultanément : mkdir -p ~/Vagrant/VM1.

3. Dans VM1, tapez la commande : ```vagrant init ubuntu/xenial64``` qui créée un fichier de configuration Vagrantfile dans le répertoire, que nous allons inspecter plus tard.

![Vagrant1.1](images/Vagrant1.1.png)

![Vagrant1.2](images/Vagrant1.2.png)

4. Démarrez la VM avec ```vagrant up```

![Vagrant1.3](images/Vagrant1.3.png)
Celle-ci ne fonctionne pas en demandant via libvirt 
c'est pour cela que j'ai essayer de faire ```vagrant up --provider=virtualbox```

![Vagrant1.4](images/Vagrant1.4.png)


5. Logez-vous sur la VM en tapant ```vagrant ssh```. Quelles sont les interfaces réseaux de la machine ?
   
![Vagrant1.5](images/Vagrant1.5.png)


6. Placez-vous dans le répertoire (de la machine physique) où VirtualBox stocke les fichiers de la VM. 

![vagrant1.6](images/vagrant1.6.png)

Quel est le type de disque (en se basant sur l’extension du fichier) ? Cherchez dans https://www.virtualbox.org/manual/ch05.html pour comprendre les différentes extensions et notamment celles de VM1 et de la machine Ubuntu créée en section ?

Le fichier est en VMDK , ce qui signifie que c'est un disque dur virtuel utiliser dans plusieurs outils de virtualisation comme VMware ou VirtualBox.

---

## 2 Vagrant Customisation VM et construction d'image : 

2.1 Customisation de l'instance - Partie 1 : 

Votre fichier Vagrantfile contient surtout des commentaires comme peut vous en convaincre un
simple :
```egrep -v -e"\#|^$" Vagrantfile```

Cette commande permet d'inverser la recherche de ne pas selectionner tout ce qui commence par "\#" et "^$" qui sont des commentaires.


1. Editer le fichier Vagranfile et d´e-commenter les lignes en rapport avec vm.provision :

```config.vm.provision "shell", inline: <<-SHELL
apt-get update
apt-get install -y apache2
SHELL
```

![Vagrant2.1](images/Vagrant2.1.png)

Le ”provisioning” aura lieu soit lors du prochain démarrage, soit à chaud. 

Nous allons prendre la seconde option en tapant la commande : ```vagrant provision```

![Vagrant2.2](images/Vagrant2.2.png)

2. Prouvez que vous avez bien un serveur Web qui tourne dans la VM en montrant :
(a) que le service apache2 est actif (quelle commande avez-vous tapé ?).
Dans la VM : 
```systemctl status apache2```

![Vagrant2.3](images/Vagrant2.3.png)

(b) que le programme apache2 écoute bien sur le port 80 (utilisez netstat du paquet net-tools)

```netstat -tulpn | grep apache2```

![Vagrant2.4](images/Vagrant2.4.png)

(c) en téléchargeant la page d’accueil (comment ? Quelle commande avez-vous tapé ?).

```curl localhost:80```

![Vagrant2.5](images/Vagrant2.5.png)

3. Visualiser la page d’accueil depuis le navigateur de la machine physique est impossible. Pourquoi ? (vous pouvez essayer pour vous en convaincre)

Car l'adresse ip de la VM en 127.0.0.1 est une adresse locale qui ne peut être accéder que depuis la VM elle même. Il serait possible de pouvoir communiquer avec la VM depuis une adresse ip dans le reseau 

4. La configuration réseau est bien compliquée. Analysez le fichier Vagrantfile et montrez qu’il y a 3 solutions (vous devez être capable de dire où elles se situent dans le fichier) pour permettre
un accès simple au serveur Apache dans la VM.

1ere solution : faire un mapping port de la VM vers le port de la machine physique qui autorise la connexion.
l:29
```config.vm.network "forwarded_port", guest: 80, host: 8080```


2eme solution : reseau priver entre les deux machines avec une adresse ip fixe
l:36

```config.vm.network "private_network", ip:192.168.24.12"```
pour cette situation je dois creer une nouvelle carte réseau dans la machine physique pour pouvoir communiquer avec la VM :


```ip link add link wlp1s20f3 name wlp1s20f3.1 type vlan id 1```
```ip link set dev wlp1s20f3.1 up```
```ip addr add 192.168.24.1 dev wlp1s20f3```


3eme solution : reseau public avec une adresse VM accessible depuis le reseau
l:41

```config.vm.network "public_network"```

```vagrant reload```
![Vagrant2.5_config](images/Vagrant2.5_config.png)
![Vagrant2.5-1](images/Vagrant2.5-1.png)
![Vagrant2.5-2](images/Vagrant2.5-2.png)
![Vagrant2.5-3](images/Vagrant2.5-3.png)


7. Quels sont (en quelques mots) les avantages et inconvénients de ces 3 solutions d'apres vous ?

1ere solution : | Avantages | Inconvénients|
|---|---|---|
|Facile à mettre en place, communications interne | Pas de communication entre les deux machines comme si c'etait 2 pc differents , ouvre un port sur la machine physique|

2eme solution : | Avantages | Inconvénients|
|---|---|---|
| Communication securisé entre les deux machines (aucun moyen de communication avec l'exterieur) pas de ouverture de port indesirable | mise en place complexe car demande a toucher a la configuration de virtualbox|

3eme solution : | Avantages | Inconvénients|
|---|---|---|
| Communication entre pc et VM (depuis un réseau physique), ouverture de port uniquement sur la VM | mise en place legerement complexe car passe par un bridge sur l'ordinateur physique| 

## 2.2 Customisation de l'instance - Partie 2 :

1. Lors du reboot de la machine, Vagrant vous a demandé sur quelle interface physique de la machine doit être fait le pont (eth1 en l’occurence). Pour ne pas avoir à faire cela à chaque
reboot, on peut modifier le fichier Vagrantfile en complétant la ligne sur l’interface réseau par le nom exact de l’interface. Cela donne (à adapter si besoin): 
```config.vm.network "public_network", bridge: "wlp0s20f3"```

![Vagrant2.2.1](images/Vagrant2.2.1.png)


2. Vagrant utilise les possibilités de répertoire partagé fournies par VirtualBox. Nous allons l'illustrer ici pour permettre de modifier les fichiers du serveur web de VM1.

(a) Dans le répertoire où se trouve le fichier Vagrantfile, créez un répertoire vagrantsite et placez dedans le fichier index.html suivant :

```html
<html>
<head>
<title>TP1 R3D17 - Vagrant</title>
</head>
<body>
<div align="center"><h1>TP1 R3D17 - Vagrant</h1></div>
</body>
</html>
```

![Vagrant2.2.2](images/Vagrant2.2.2.png)

(b) Puis éditez le fichier Vagrantfile, et modifiez la partie montage de fichier et la partie liée au montage de fichier ainsi que celle concernant le script de configuration.

```bash
...
config.vm.synced_folder "vagrantsite", "/opt/vagrantsite"
...
config.vm.provision "shell", inline: <<-SHELL
apt-get update
apt-get install -y apache2
ln -s /opt/vagrantsite /var/www/html/vagrantsite
SHELL
```

3. Redémarrez votre instance avec la commande ```vagrant reload --provision```

![Vagrant2.2.3](images/Vagrant2.2.3.png)

Attention : il faut faire reload pour redémarrer une VM et –provision pour que la partie provisioning se fasse. Pourquoi est-ce que la partie provisioning est-elle optionnelle et non
exécutée à chaque boot ?

Car le provisioning est une action qui peut prendre du temps et qui n'est pas forcement utile a chaque reboot de la VM.

4. Montrer que les modifications escomptées ont bien été faites en affichant la page d’accueil du site vagrantsite (http://yyy/html/vagrantsite/index)

![Vagrant2.2.4](images/Vagrant2.2.4.png)


## 2.3 Préparation d'une image : 

Supposons que l'image actuelle nous satis